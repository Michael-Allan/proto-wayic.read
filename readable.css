/* readable.css - Document styling on the client side
 *
 *   Summoned by the waycaster’s personal configuration program (see manual.task § Installation),
 *   this style sheet runs on the client side — in the waycast reader’s web browser —
 *   where it formats the presentation of each way declaration document.
 *
 *   See manual.task for usage instructions.
 */
@namespace html 'http://www.w3.org/1999/xhtml';
@namespace read 'data:,wayic.read';
@namespace  way 'data:,wayscript';
@namespace step 'data:,wayscript.bit.step'; /*
              ↗ 'data:,wayscript.bit' covers waybits proper.  They have no styling of their own;
                   rather they share the styling of waybits in general. */
@namespace svg 'http://www.w3.org/2000/svg';


*:root
{
    margin: 0; padding: 0; /* See § Scene */
    position: relative; /* To contain the absolutely positioned *offWayScreen*. [ECB]
      Typically one would give this function to its parent (*body* element).
      Better however to size and position the screen to cover the document as a whole,
      including any content that happens to stick outside of the body. */
}


html|body
{
    display: none; /* Pending layout completion by readable.js */
    margin: 0; padding: 0; /* See § Scene */

               color: hsl( 0, 0%, var(--textLight) );
    background-color: hsl( 0, 0%, var(--backLight) );
}


html|body > read|offWayScreen
{
 /* A semi-opaque screen that extends out to cover the document element.  On-way branches rise clear
    of this screen, distinct from any off-way ancestors that are left behind, still dimmed by it.
    One would rather dim the off-way ancestors with an *opacity* or alpha *filter* property instead,
    except that on-way descendants could not then undo the effect.  Or with semi-opaque colours in
    their foreground properties, except that each distinct colour would then have to be declared twice,
    in off-way and on-way variants, adding a large burden to a style sheet that is already burdened
    by colour variants in its lighting styles.  Hence this technique of screening. */

    background-color: inherit; /* So screening whatever lies beneath */
    pointer-events: none;
    position: absolute;
    left:0; top:0;
    width: 100%;
    height: 100%;
}


*[read|isOnWayBranch]
{
    position: relative; z-index: 1; /* Raised clear of the *offWayScreen*.
      But if an ancestor is already so raising the branch, then this only raises it
      within the ancestor's stacking context, which should have no visual effect. */
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon']
{
    --textLight: 80%; /* Bright text, yet allowing brighter effects elsewhere */
    --backLight: 20%; /* On dark */
}


html[read|lighting='neon'] > html|body > read|offWayScreen
{
    opacity: 0.5;
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper']
{
    --textLight: 7%; /* Dark text, yet allowing darker effects elsewhere */
    --backLight: 93%; /* On bright white, yet allowing brighter touches elsewhere */
}


html[read|lighting='paper'] > html|body > read|offWayScreen
{
    opacity: 0.6;
}



/* ---  a  --  H y p e r l i n k   t r i g g e r s  ----------------------------------------------------
 */

html|a:active
{
    outline: none; /* Defeat any browser default (Firefox).  Outlines are confusing in composite
      triggers (a > verticalTruncator, e.g.).  No trigger of any kind needs active-state styling. */
}


html|a[href]
{
    cursor: url('trigger_cursor/base.svg') 13 2 /* TRIGGER_CURSOR */, pointer; /* [CVU] */
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon']
{
    --hyperlink-color: hsl( 190/*∼cyan*/, 100%, 60% );
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper']
{
    --hyperlink-color: hsl( 240/*blue*/, 100%, 50% );
}



/* ---  F a d i n g   c r u m b  -----------------------------------------------------------------------
 */

@keyframes fadingCrumb
{
     0% { outline: thin var(--crumbOutlineStyle) var(--hyperlink-color); animation-timing-function:
       /* Holding constant */                                              linear }
    33% { outline: thin var(--crumbOutlineStyle) var(--hyperlink-color); animation-timing-function:
       /* Fading */                                                        ease-out }
   100% { outline: thin var(--crumbOutlineStyle) transparent }
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon']
{
    --crumbOutlineStyle: dotted;
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper']
{
    --crumbOutlineStyle: solid;
}



/* ---  G r o u p  -------------------------------------------------------------------------------------
 */

way|group
{
    border-radius: 0.5em;
    border-width: 0.1em;
           left: -0.1em; /* Despite the border, maintain a precise text margin for appearance sake */
    margin-left:          -2.5em; /* Meet constraints on GROUP_L */
    padding: 0.2em 0.2em 0.2em 2.5em; /* TRBL */
    position: relative;
}


way|group way|group /* Nested groups */
{
    margin-right: 0.7em; /* Space between adjacent, vertical border lines to better show the nesting */
}


way|group > eSTag
{
    font-style: italic;
    opacity: 0.6;
    padding-left: 3em; /* ≥ NEST_INDENT, in case any inline qualifying text flows to next line */
    text-indent: -3em; /* But not on the first line, rather maintain its alignment */
}


way|group > eSTag > eQName > ePrefix
{
    display: none; /* Assuming that it is uninformative */
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon'] way|group
{
    border-color: hsla( 0, 0%, 100%, 0.35 );
    border-style: dashed;
    margin-top: 0.2em !important; /* Accomodate the borders */
    margin-bottom: 0.3em !important;
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper'] way|group
{
    border-color: hsla( 0, 0%, 0%, 0.25 );
    border-style: solid none none solid; /* TRBL */
    box-shadow: /*X offset*/0.2em /*Y offset*/0.3em /*blur*/0.5em /*colour*/hsla(0,0%,0%,0.55);
    margin-top: 0.3em !important; /* Accomodate the shadows */
    margin-bottom: 0.7em !important;
}



/* ---  H y p e r s t y l e r  -------------------------------------------------------------------------
 */

read|hyperstyler       > html|a
{
    color: inherit; /* Defeat colour as unecessary and distracting */
    text-decoration-color: transparent; /* Redundant but for enabling a *transition* effect */
 /* text-decoration-skip: ink; *//* On one hand, this is already the default in Chrome,
      while it is not recognized at all in Firefox (52.6).  ∴ avoid the console warning in Firefox.
      On the other, the latest standard replaces it with a *text-decoration-skip-ink-property* which is
      enabled by default.  https://www.w3.org/TR/css-text-decor/#text-decoration-skip-ink-property */

    animation-duration: 3s;
    outline-offset: 0.5em;
}
html[read|animatedShow]
read|hyperstyler       > html|a[read|showsBreadcrumb]
{
    animation-name: fadingCrumb; /* As a breadcrumb locator */
}


read|hyperstyler:hover > html|a,
read|hyperstyler       > html|a[read|showsBreadcrumb]
{
    text-decoration-color: var(--hyperlink-color);
    text-decoration-line: underline; /* [FIB] */
}


read|hyperstyler       > html|a:not([read|showsBreadcrumb])
{
    transition-property: text-decoration-color,    z-index;
    transition-duration:                  0.2s,         0s;
    transition-timing-function:       ease-out, step-start;
    transition-delay:                     0.1s,       1.0s; /* Avoid distracting flash on passing */
}


read|hyperstyler       > html|a,
read|hyperstyler       > read|triggerMark
{
    position: relative; /* Enabling *z-index* change on hover */
    z-index: 0; /* So enabling its *transition*, which the default does not */
}
read|hyperstyler:hover > html|a,
read|hyperstyler       > html|a[read|showsBreadcrumb],
read|hyperstyler:hover > read|triggerMark
{
    z-index: 1; /* Raised clear of the *offWayScreen* */
}


read|hyperstyler       > read|triggerMark
{
    color: var(--hyperlink-color);
}



/* ---  R e f e r e n t i a l   j o i n t e r  ---------------------------------------------------------
 */

read|bitformJointing > a:not([href^='#']), /* With a target reference in interdocument form */
read|hyperstyler     > a:not([href^='#'])[way|join]
{
    cursor: url('trigger_cursor/target_out.svg') 13 2, pointer; /* As a directional cue */
}


read|bitformJointing > a[href^='#'][read|targetDirection='self'], /* Targeting self */
read|hyperstyler     > a[href^='#'][read|targetDirection='self'][way|join]
{
    cursor: url('trigger_cursor/base.svg') 13 2, pointer;
}
read|bitformJointing > a[href^='#'][read|targetDirection='up'], /* Targeting upward in own document, */
read|hyperstyler     > a[href^='#'][read|targetDirection='up'][way|join]
{
    cursor: url('trigger_cursor/target_up.svg') 13 2, pointer;
}
read|bitformJointing > a[href^='#'][read|targetDirection='down'], /* … or downward, */
read|hyperstyler     > a[href^='#'][read|targetDirection='down'][way|join]
{
    cursor: url('trigger_cursor/target_down.svg') 13 2, pointer;
}
read|bitformJointing > a[href^='#']:not([read|targetDirection]), /* … or to a missing target. */
read|hyperstyler     > a[href^='#']:not([read|targetDirection])[way|join]
{
    cursor: url('trigger_cursor/target_in.svg') 13 2, pointer;
}



/* ---  R e f e r e n t i a l   j o i n t e r --  B i t f o r m   j o i n t i n g  ---------------------
 */

read|bitformJointing > a
{
    color: inherit; /* Defeat colour as unecessary and distracting */
    text-decoration: none; /* Defeat any browser default (Chrome).  Underlines are confusing here.
      The contained *verticalTruncator* already suffices to indicate hyperlink presence. */
}


read|bitformJointing > a > preview:empty,
read|bitformJointing > a > preview:empty + br
{
    display: none;
}


read|bitformJointing > a > preview[class~='singleCharacterContent'] /* [C] */
{
    display: inline-block; /* Enables *min-width* */
    min-width: 2em; /* = VT_PAD_L × 2; enables *text-align* */
    text-align: center; /* Over the left glyph-edge of the *verticalTruncator* */
}


*:not([read|hasPreviewString]):not([read|imaging='absent']):not([read|presentsShortName]) >
read|bitformJointing > a > br
{
    display: none; /* It happens that no text content precedes the injected *br* element.
      Therefore let it collapse to nothing.  But not when the source node has a short name;
      then the *br* is wanted to position the *verticalTruncator* below the node's start tag. */
}
*:not([read|hasPreviewString]):not([read|imaging='absent']) >
read|bitformJointing > a > verticalTruncator
{
    margin-left: -2em; /* = -NEST_INDENT, leaving only the click padding for indentation */
}


read|bitformJointing > a                       > verticalTruncator
{
    padding-left: 1em; /* Extra click surface + indentation beneath overlying preview text; VT_PAD_L */
    padding-right: 4em; /* Extra click surface */
    position: relative; /* Enabling *z-index* change on hover */
}


read|bitformJointing > a:hover                 > verticalTruncator,
read|bitformJointing > a[read|showsBreadcrumb] > verticalTruncator
{
    color: var(--hyperlink-color); /* [FIB] */
    z-index: 1; /* Raised clear of the *offWayScreen* */
}


read|bitformJointing > a                       > verticalTruncator > span
{
    animation-duration: 3s;
    outline-offset: 0.3em;
}
html[read|animatedShow]
read|bitformJointing > a[read|showsBreadcrumb] > verticalTruncator > span
{
    animation-name: fadingCrumb; /* As a breadcrumb locator */
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon'] *[read|imaging]:not(step|*) > eSTag > eQName > eName,
html[read|lighting='neon'] *[read|imaging] > read|bitformJointing > a > preview
{
    color: hsl( var(--subjointImage-hue), 30%, 50% );
}


html[read|lighting='neon'] *[way|join$='/way.xht#resolve'] > eSTag > eQName > eName
{
    color: hsl(  36/*orange*/, 100%, 50% );
}


html[read|lighting='neon'] *[read|isBroken] > read|bitformJointing > a > preview
{
    color: hsl( 0/*red*/, 80%, 80% );
}


html[read|lighting='neon'] read|bitformJointing > a                       > verticalTruncator
{
    opacity: 0.4;
}
html[read|lighting='neon'] read|bitformJointing > a:hover                 > verticalTruncator,
html[read|lighting='neon'] read|bitformJointing > a[read|showsBreadcrumb] > verticalTruncator
{
    opacity: 1;
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper'] *[read|imaging] > eSTag > eQName > eName,
html[read|lighting='paper'] *[read|imaging] > read|bitformJointing > a > preview
{
    color: hsl( var(--subjointImage-hue), 100%, 30% );
}


html[read|lighting='paper'] *[way|join$='/way.xht#resolve'] > eSTag > eQName > eName
{
    color: hsl(  0/*red*/, 100%, 35% );
}


html[read|lighting='paper'] *[read|isBroken] > read|bitformJointing > a > preview
{
    color: hsl( 0/*red*/, 100%, 40% ); /* DARK_BREAK */
}


html[read|lighting='paper'] read|bitformJointing > a                       > verticalTruncator
{
    opacity: 0.2;
}
html[read|lighting='paper'] read|bitformJointing > a:hover                 > verticalTruncator,
html[read|lighting='paper'] read|bitformJointing > a[read|showsBreadcrumb] > verticalTruncator
{
    opacity: 1;
}



/* ---  S c e n e  -------------------------------------------------------------------------------------
 */

read|scene
{
    display: block;
}


read|scene#data\:\,wayic\.read\.document_scene
{
    --section-margin: 3em;
    margin: var(--section-margin) auto 5em auto; /* TRBL */
    max-width: 50em;
    padding: 0 0.7em 0 3.4rem; /* TRBL, where L = MIN_CLICK_WIDTH_REM + MIN_GAP_REM + HALL_W,
                                        where the *_REM components are defined in readable.js */
}


read|scene#data\:\,wayic\.read\.document_scene html|section,
read|scene#data\:\,wayic\.read\.document_scene > *[read|isProperWayscript]
{
    margin-top:    var(--section-margin);
    margin-bottom: var(--section-margin);
}



/* ---  S t a r t   t a g  -----------------------------------------------------------------------------
 */

read|eSTag
{
    display: block;
    margin-left: -2em; /* -NEST_INDENT, undoing it */
}


read|eSTag > eQName > eName[class~='wideCharacterSpace']
{
    line-height: 0.9; /* Try to preserve the line spacing despite any font substitution owing
      to the wider choice of characters. */
}


*[read|presentsShortName]:not([read|presentsShortName*='2']):not([id]) > read|eSTag > eQName > eName
  /* Presents a name shorter than 2, yet is not styled with a cursor in § Self-hyperlinking. */
{
    cursor: default; /* Defeat text cursor to avoid flash on passing, which distracts */
}



/* ---  S t a r t   t a g  --  I n l i n e d  ----------------------------------------------------------
 *
 * These rules put the start tag in line with the leading flow content if it is short enough to allow
 * the flow content to rise alongside yet maintain its horizontal alignment.
 *
 * The inlining is done by floating the start tag which allows the leading flow content to fall in line.
 * If this method ever proves too difficult to maintain owing to the complications of the float layout,
 * then consider switching to the simpler, more direct method of the *group* element,
 * namely shipping the leading flow content into the start tag.  A drawback would be the loss
 * of uniform left alignment of the first line of flow content from one waybit to another.
 */

*[read|presentsShortName][read|hasLeader]:not([read|imaging='absent'])[read|isWaybit] > eSTag
{
    float: left; /* Putting the element's start tag in line with its leading text content */
    margin-right: 0.5em;
}


step|*[read|presentsShortName][read|hasLeader]:not([read|imaging='absent']) > read|textAligner
{
    display: block;
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon']
step|*[read|presentsShortName][read|hasLeader]:not([read|imaging='absent']) > read|textAligner
{
    padding-top: 0.30em; /* = NEO_ST_MARG_T + ST_PAD_T */
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper']
step|*[read|presentsShortName][read|hasLeader]:not([read|imaging='absent']) > read|textAligner
{
    padding-top: 0.28em; /* = PAP_ST_MARG_T + ST_PAD_T + ST_BOR */
}



/* ---  S t e p  ---------------------------------------------------------------------------------------
 */

step|* > eSTag > eQName
{
    border-radius: 0.15em / 15%; /* H / V */
    padding: 0.10em   0.20em   0.15em   0.25em; /* TRBL.  TB do not affect layout ∵ eName is inline,  */
}        /* -------- -------- --------    yet they do cause overlapping, ∴ still need ST_PAD constraints
            ST_PAD_T ST_PAD_L ST_PAD_B */

step|* > eSTag > eQName > ePrefix,
step|* > eSTag > eQName > eName:not([class~='wideCharacterSpace']) /* [NBW] */
{
    font-weight: bold;
}


step|* > eSTag > eQName > ePrefix[read|isAnonymous],
step|* > eSTag > eQName:not([read|isAnonymous]) > ePrefix
{
    display: none; /* Let the local part stand alone */
}


step|* > eSTag > eQName[read|isAnonymous] > ePrefix:not([read|isAnonymous]) + eName
{
    display: none; /* Let the prefix stand alone */
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon'] step|* > eSTag
{
     margin-top:    0.20em; /* NEO_ST_MARG_T */
    padding-top:    0.10em; /* = ST_PAD_T */
    padding-bottom: 0.15em; /* = ST_PAD_B */
     margin-bottom: 0.20em;
}


html[read|lighting='neon'] step|*               > eSTag > eQName
{
               color: hsl(  0, 0%,   0% );
    background-color: hsla( 0, 0%, 100%, 0.45 );
    margin-left: -0.20em; /* = -ST_PAD_L */
}
html[read|lighting='neon'] step|*[read|imaging] > eSTag > eQName
{
    background-color: hsla( var(--subjointImage-hue), 100%, 60%, 0.45 );;
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper'] step|* > eSTag
{
     margin-top:    0.10em; /* PAP_ST_MARG_T */
    padding-top:    0.18em; /* = ST_PAD_T + ST_BOR */
    padding-bottom: 0.23em; /* = ST_PAD_B + ST_BOR */
     margin-bottom: 0.10em;
}


html[read|lighting='paper'] step|* > eSTag > eQName
{
    /* prominence for the steps, making them stand out at a glance from the other waybits */
    background-color: hsla( 0, 0%, 100%, 0.40 );
    border-color:     hsla( 0, 0%,   0%, 0.80 );
    border-style: solid;
    border-width: 0.08em; /* ST_BOR */
    margin-left: -0.28em; /* = -(ST_PAD_L + ST_BOR), to maintain precise text alignment */
}



/* ---  S u b j o i n i n g   w a y b i t  -------------------------------------------------------------
 */

[read|isSubjoining] > eSTag
{
    position: relative; /* [ECB] */
}


.inway
{
    position: absolute; top: 0; /* Further placement deferred to readable.js */
    visibility: hidden; /* Avoiding FOUC.  readable.js reverts this after laying out the content.
      But the layout depends on the size of the hall child, therefore do not use display 'none' here. */
}


.inway > svg.approach
{
    animation-duration: calc( var(--inflightDuration) + var(--inflightImpactPropagation) * 2 );
    animation-timing-function: step-start;
    display: none;
    position: absolute; top: 0; left: 0; /* [HSP] Sizing deferred to readable.js */
}


[read|isSubjoining='window targeted']         > eSTag >
.inway > svg.approach
{
    display: unset; /* Allowing it to show */
    z-index: 1; /* Raised clear of the *offWayScreen* */
}


html[read|animatedShow][read|travelDelta='0'] /* Reload */
[read|isSubjoining='window targeted']/*[FT]*/ > eSTag >
.inway > svg.approach,
html[read|animatedShow][read|travelDelta='1'] /* Forward one position [NMP] */
[read|isSubjoining='window targeted']/*[FT]*/ > eSTag >
.inway > svg.approach
{
    animation-name: inflightInwayApproach; /* As a travel target locator */
}


@keyframes inflightInwayApproach
{
     0% { visibility: hidden }
       /* Held constant, delaying the *window targeted* styling till after impact */
   100% { visibility: hidden }
}


.inway > svg.approach > .edging
{
    fill: currentColor;
}


.inway > svg.approach > path
{
    stroke: currentColor;
}


.inway > hall
{
    cursor: url('trigger_cursor/base.svg') 13 2 /* = TRIGGER_CURSOR */, pointer; /* [CVU]
      For self-hyperlinking, as per function *handleClick* in readable.js SelfHyperlinking */

    position: absolute;
    top: 0; right: 0;
    width: 2.0rem; /* HALL_W.  It determines the visual gap between the left-aligned content
      of the hall and that of the tag name to its right. */
}


[read|isWaybit]
[read|isWaybit] > eSTag >  /* When it is an underbit */
.inway > hall
{
    width: 3.5em; /* Wider to better separate from suprabutting content */
}


[read|isWaybit] way|group >
[read|isWaybit] > eSTag >  /* When also it is a *group* child */
.inway > hall
{
    width: 2.0em; /* ∴ GROUP_L ≥ 2.0em; no wider, as there is no suprabutting content */
}


html
{
    --inflightDurationAbove: 0.1s; /* Duration of missile flight from start to flyby,
        when it passes the user and becomes visible.  This is rest time for the browser,
        avoiding a balky start to the animation. */
    --inflightDurationBelow: 0.4s; /* Duration of missile flight from flyby till impact */
    --inflightDuration: calc( var(--inflightDurationAbove) + var(--inflightDurationBelow) );
    --inflightImpactPropagation: 0.1s; /* Time till effect of impact first becomes visible */
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon'] .inway > svg.approach
{
    opacity: 0.50;
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper'] .inway > svg.approach
{
    opacity: 0.30;
}



/* ---  S u b j o i n i n g   w a y b i t  --  I c o n  ------------------------------------------------
 */

.inway > hall > icon
{
    position: relative; /* [ECB] */
}


.inway > hall > icon > span
{
    animation-duration: var(--inflightDuration);
    animation-timing-function: step-start;
    opacity: var(--iconicOpacity);
    position: relative; /* Enabling *z-index* change */
}
eSTag:hover > /* For self-hyperlinking */
.inway > hall > icon > span
{
    opacity: var(--iconicOpacity-hover);
    z-index: 1; /* Raised clear of the *offWayScreen* */
}


[read|isSubjoining='window targeted']/*[FT]*/ > eSTag >
.inway > hall > icon > span
{
    z-index: 1; /* Raised clear of the *offWayScreen* */
}
[read|isSubjoining='window targeted']/*[FT]*/ > eSTag       >
.inway > hall > icon > span,
[read|isSubjoining='window targeted']/*[FT]*/ > eSTag:hover >
.inway > hall > icon > span
{
    opacity: var(--iconicOpacity-windowTargeted);
}


html[read|animatedShow][read|travelDelta='0'] /* Reload */
[read|isSubjoining='window targeted']/*[FT]*/ > eSTag >
.inway > hall > icon > span,
html[read|animatedShow][read|travelDelta='1'] /* Forward one position [NMP] */
[read|isSubjoining='window targeted']/*[FT]*/ > eSTag >
.inway > hall > icon > span
{
    animation-name: inflightTarget; /* As a travel target locator */
}


@keyframes inflightTarget /* Target symbol, the main content (span) of the subjoint icon */
{
     0% { opacity: var(--iconicOpacity); z-index: unset }
       /* Held constant, delaying the *window targeted* styling till after impact */
   100% { opacity: var(--iconicOpacity); z-index: unset }
}


/* - - -  neon   - - - - - - - - - - - -
 */

html[read|lighting='neon']
{
    --iconicOpacity: 0.25;
    --iconicOpacity-hover: 0.70; /* For self-hyperlinking */
    --iconicOpacity-windowTargeted: 1.00;
}


/* - - -  paper  - - - - - - - - - - - -
 */

html[read|lighting='paper']
{
    --iconicOpacity: 0.15;
    --iconicOpacity-hover: 0.50; /* For self-hyperlinking */
    --iconicOpacity-windowTargeted: 1.00;
}



/* ---  S u b j o i n i n g   w a y b i t  --  I c o n i c   b u l l s e y e  --------------------------
 */

.inway > hall > icon > bullseye
{
    animation-delay: var(--inflightDurationAbove);
    animation-duration: var(--inflightDurationBelow);
    animation-timing-function: /*constants*/step-start,
                             /*perspective*/linear; /* A linear function of distance */
    border: 0.5px/* = BBW */ solid transparent; /* Actualized only to enable effect of border-radius */
    border-radius: 50%; /* Rounding fully to force the animated shadow into a circular form */
    opacity: 0.2; /* Dimming the missile while retaining its basic colour.
      The *contrast* filter proves inadequate here, maybe because the missile is a box shadow. */

    position: absolute;
    width: 0; height: 0; /* Declares no inner content, rather a position for outer shadowing. */
    margin: auto; /* Centred in the icon as enabled by the Janus faced positioning below.   */
    left: 0; right: 0;  /* Janus faced to enable centring by 'auto' margins,               */
    top: 0; bottom: 0; /* https://www.w3.org/TR/css-position-3/#abs-non-replaced-width     */
}



html[read|animatedShow][read|travelDelta='0'] /* Reload */
[read|isSubjoining='window targeted']/*[FT]*/ > eSTag >
.inway > hall > icon > bullseye,
html[read|animatedShow][read|travelDelta='1'] /* Forward one position [NMP] */
[read|isSubjoining='window targeted']/*[FT]*/ > eSTag >
.inway > hall > icon > bullseye
{
    animation-name: inflightMissile_constants, /* As travel target locators */
                    inflightMissile_perspective;
}


@keyframes inflightMissile_constants /* Held constant for the duration of the flight */
{
     0% { z-index: 1 } /* Raised clear of the *offWayScreen* */
   100% { z-index: 1 }
}


@keyframes inflightMissile_perspective /* Apparent size and position of missile */
{      /*             X offset         Y offset        Blur Spread                */
     0% { box-shadow: var(--triggerX)  var(--triggerY)  0    var(--inflightSpread) }
   100% { box-shadow: 0               -0.5px/*[VCB]*/   0    0                     }
}



html
{
    --inflightSpread: 5rem; /* Apparent size of missile at flight start */
    --triggerX: 0; /* Apparent position of hyperlink trigger relative to bullseye */
    --triggerY: -0.5px; /* [VCB] */
}
html:not(/*reload*/[read|travelDelta='0'])[read|targetDirection='up']
{
    --triggerX: 0;
    --triggerY: calc(  1.3 * var(--inflightSpread) - 0.5px/*[VCB]*/ );
}
html:not(/*reload*/[read|travelDelta='0'])[read|targetDirection='down']
{
    --triggerX: 0;
    --triggerY: calc( -1.3 * var(--inflightSpread) - 0.5px/*[VCB]*/ );
}
html:not(/*reload*/[read|travelDelta='0'])[read|targetDirection='out'] /* ∴ right */
{
    --triggerX: calc( -1.3 * var(--inflightSpread) );
    --triggerY: -0.5px; /* [VCB] */
}
html:not(/*reload*/[read|travelDelta='0'])[read|targetDirection='self'] /* ∴ left */
{
    --triggerX: calc(  0.6 * var(--inflightSpread) );
    --triggerY: -0.5px; /* [VCB] */
}



/* ---  t e x t - A l i g n e r  -----------------------------------------------------------------------
 */

read|textAligner
{
    display: none;
}



/* ---  W a y b i t  -----------------------------------------------------------------------------------
 */

*[read|isWaybit]
{
    margin-left: 2em; /* NEST_INDENT to effect the nesting of waybit dependents */
    --subjointImage-hue: 44/*reddish brown*/;
}



/* ---  W a y b i t  --  N o n - s t e p  --------------------------------------------------------------
 */

*[read|isWaybit]:not(step|*) > eSTag
eQName > ePrefix
{
    display: none; /* Assume that it is uninformative */
}


*[read|isWaybit]:not(step|*) > eSTag > eQName > eName:not([class~='wideCharacterSpace']) /* [NBW] */
{
    filter: contrast(1.4);
    font-weight: bold;
}



/* ---  W a y b i t  --  S e l f - h y p e r l i n k i n g  --------------------------------------------
 */

[id]                       > eSTag > eQName
{
    animation-duration: 3s;
    cursor: url('trigger_cursor/base.svg') 13 2 /* = TRIGGER_CURSOR */, pointer; /* [CVU]
      Has click function via readable.js SelfHyperlinking handleClick. */
    outline-offset: 0.3em;
}


html[read|animatedShow]
[id][read|showsBreadcrumb] > eSTag > eQName
{
    animation-name: fadingCrumb; /* As a breadcrumb locator */
}



/* ---  W a y s c r i p t   p r o p e r  ---------------------------------------------------------------
 */

*[read|isProperWayscript]
{
    clear: left;
    display: block; /* Changing?  sync'd → readable.js layoutBlock. */
    margin-top:    0.1em;
    margin-bottom: 0.1em;
}



/* NOTES
 * -----
 *  [C]  · Class selectors.  These fail for NS_READ elements under Chrome (59).  Instead select
 *         the class of NS_READ element using the general attribute selector [class~='CLASS'].
 *
 *  [CVU]  Cursor variables with URI values.  Unable to use a CSS variable here because Chrome (59)
 *         wrongly resolves the relative URI against the document rather than the style sheet.
 *
 *  [ECB]  Here establishing the containing block for absolutely positioned descendants.
 *          https://www.w3.org/TR/css-position-3/#cb
 *
 *  [FIB]  Focus for inlined breadcrumbs.  Here avoiding use of the HTML focus facility as a base
 *         for inlined breadcrumb trails.  It seems unreliable.  The browsers are doing their own
 *         peculiar things with focus which are hard to work around.
 *         http://w3c.github.io/html/editing.html#focus
 *
 *  [FT] · Failure of target pseudo-class in selector.  Here using a selector in workaround form:
 *
 *             [read|isSubjoining='window targeted']
 *
 *         Instead of the standard form:
 *
 *             [read|isSubjoining]:target
 *
 *         The standard form was seen to fail on Chrome 65.0.  It failed during relatively fast
 *         (∼1 s interval) back-and-forth travel.  Otherwise no workaround would be necessary
 *         and attribute *isSubjoining* would need only a boolean value [BA in readable.js].
 *
 *  [HSP]  HTML-embedded styling property.  The SVG standard appears to grant the *svg* element
 *         no such styling property.  Nevertheless the browsers are obeying it,
 *         at least when the *svg* element is embedded in HTML.
 *         https://www.w3.org/TR/SVG11/struct.html#SVGElement
 *         https://www.w3.org/TR/SVG11/styling.html#SVGStylingProperties
 *         http://w3c.github.io/html/semantics-embedded-content.html#svg
 *
 *  [NBW]  No bold facing in wide character spaces.  The result would be uncertain because the
 *         broadened choice of characters is likely to expose some that render poorly in bold face.
 *
 *  [NMP]  Not on multi-position travel.  Travel direction cues appear for unit travel and reload alone,
 *         because it happens these alone determine the calculated direction.  Showing that direction
 *         in other cases is unlikely to help reorient the user, rather likely to mislead him.
 *
 *  [VCB]  Vertical centring on bullseye.  Here deflecting Y offset by -BBW for a better centring.
 *         Unicode 1f78b round target.  Droid Sans/Chrome, Georgia/Firefox.
 */


/* Copyright © 2017-2018 Michael Allan and contributors.  Licence MIT. */

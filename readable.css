/* readable - Way declarations that are readable on the web
 *
 *   Here are usage instructions and advice for waycasters who wish to use this transformer.
 *
 *
 * INSTALLATION
 * ------------
 *   See also http://reluk.ca/project/wayic/cast/doc.task § Personal configuration.
 *   For a working example of an installation, see:
 *
 *       * http://reluk.ca/project/waycast/way.css
 *       * http://reluk.ca/project/waycast/way.js
 *
 *
 *   Personal style sheet, way.css
 *   --------------------
 *     Atop the style sheet, insert this:
 *
 *         @import 'http://reluk.ca/project/wayic/read/readable.css';
 *
 *     Optionally add this:
 *
 *         @import 'http://reluk.ca/project/wayic/read/pre_note.css';
 *
 *
 *   Personal configuration program, way.js
 *   ------------------------------
 *     There insert the equivalent of this:
 *
 *         const s = document.body.appendChild(
 *           document.createElementNS( 'http://www.w3.org/1999/xhtml', 'script' ));
 *         s.setAttribute( 'src', 'http://reluk.ca/project/wayic/read/readable.js' );
 *         s.addEventListener( 'load', ( _Event ) =>
 *         {
 *            wayic.read.readable.start();
 *         });
 *
 *
 * CONFIGURATION
 * -------------
 *   Optionally configure the transformer before starting it.
 *   For example: (extending the example above)
 *
 *       ⋮
 *       s.addEventListener( 'load', ( _Event ) =>
 *       {
 *          wayic.read.readable.setEnforceConstraints( true );
 *          wayic.read.readable.start();
 *       });
 *
 *   The available configuration options are detailed in readable.js § Public interface.
 *
 *
 * ANONYMOUS ELEMENT AND PREFIX DECLARATIONS
 * -----------------------------------------
 *   This transformer takes as anonymous any wayscript element in which the local part of the name
 *   is encoded by a single underscore ‘_’.  It transforms the element accordingly.  Likewise it gives
 *   an element with a namespace prefix of ‘_’ the same form as an element that has no prefix.
 *
 *
 * COMPOSITION LEADER ALIGNMENT
 * ----------------------------
 *   In the source, it may happen that a composer start tag is followed on the same line by text
 *   or HTML content.  For example:
 *
 *       <cog:including>, as it may happen
 *
 *   When the transformer encounters this, it tries to reproduce a similar layout.
 *
 *
 * SECTIONING
 * ----------
 *   This transformer puts vertical margins on HTML *section* elements.  It adds the same margins
 *   to wayscript elements that are *direct children of the body*.  To defeat this automatic margining
 *   for a given group of *body* children, put them together in a single *section* element.
 *
 *
 * TROUBLESHOOTING
 * ---------------
 *   See also readable.js § toEnforceConstraints.
 *
 *   Console reporting
 *   -----------------
 *     This transformer reports problems it detects to the browser’s debugging console.
 *     https://console.spec.whatwg.org/
 *
 *   Requests by ‘file’ scheme
 *   -------------------------
 *     When the user requests a way declaration document from a ‘file’ scheme URL.
 *
 *     Alert reporting
 *     ---------------
 *       When the user requests a way declaration document from a ‘file’ scheme URL,
 *       this transformer assumes that the user is the author of that document.  Then,
 *       in addition to console reporting, it opens an *alert* window to report malformed content
 *       or any other problem that an author might be able to remedy.
 *
 *     Limitations
 *     -----------
 *       When the user requests a way declaration document from a ‘file’ scheme URL,
 *       intracast, interdocument waylinks may fail to resolve their targets. [SFL]
 *       In that case, any bitform waylinks that fail to resolve will be marked ‘⋯?⋯’,
 *       and generally the transformation will be incomplete and the way definition harder to view.
 *       Security constraints enforced by the browser are the underlying cause of this.
 *
 *       A workaround for Chrome is its ‘--allow-file-access-from-files’ option. [AFA]
 *
 *       A workaround for Firefox is to first request the root way declaration document
 *       from the base directory of the waycast.  Then follow the links from there. [SPF]
 *
 *
 * NOTES  (continued at bottom)
 * -----
 */
@namespace html 'http://www.w3.org/1999/xhtml';
@namespace read 'data:,wayic.read';
@namespace  cog 'data:,wayscript.cog';
@namespace step 'data:,wayscript.bit.step'; /*
              ↗ 'data:,wayscript.bit' covers waybits *simply*.  They have no styling of their own;
                   rather they share the styling of waybits in general. */
@namespace svg 'http://www.w3.org/2000/svg';


*:root
{
    margin: 0; padding: 0; /* See § scene */
    position: relative; /* Establish a containing block for the absolutely positioned *offWayScreen*.
      Normally its parent (the *body* element) would be given this function.  But its better to size
      and position the screen to cover the document as a whole, including any content that happens
      to stick outside of the body. */
}


html|body
{
    display: none; /* Pending layout completion by readable.js */
    margin: 0; padding: 0; /* See § scene */
}


html|body > read|offWayScreen
{
 /* A semi-opaque screen that extends out to cover the document element.  On-way branches rise clear
    of this screen, distinct from any off-way ancestors that are left behind, still dimmed by it.
    One would rather dim the off-way ancestors with an *opacity* or alpha *filter* property instead,
    except that on-way descendants could not then undo the effect.  Or with semi-opaque colours in
    their foreground properties, except that each distinct colour would then have to be declared twice,
    in off-way and on-way variants, adding a large burden to a style sheet that is already burdened
    by colour variants in its lighting styles.  Hence this technique of screening. */

    background-color: inherit; /* So screening whatever lies beneath */
    pointer-events: none;
    position: absolute;
    left:0; top:0;
    width: 100%;
    height: 100%;
}


*[read|isOnWayBranch]
{
    position: relative; z-index: 1; /* Raised clear of the *offWayScreen*.
      But if an ancestor is already so raising the branch, then this only raises it
      within the ancestor's stacking context, which should have no visual effect. */
}



/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon'] > html|body
{
               color: hsl( 0, 0%, 80% ); /* BRIGHT_TEXT, yet allowing brighter effects elsewhere */
    background-color: hsl( 0, 0%, 20% ); /* On dark */
}


html[read|lighting='neon'] > html|body > read|offWayScreen
{
    opacity: 0.5;
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper'] > html|body
{
               color: hsl( 0, 0%, 7% ); /* DARK_TEXT, yet allowing darker effects elsewhere */
    background-color: hsl( 0, 0%, 93% ); /* On bright white, yet allowing brighter touches elsewhere */
}


html[read|lighting='paper'] > html|body > read|offWayScreen
{
    opacity: 0.6;
}



/* ---  a  --  h y p e r l i n k s  --------------------------------------------------------------------
 */

html|a:active
{
    outline: none; /* Defeat any browser default (Firefox).  It looks confusing in composite hyperlinks
      (e.g. a > verticalTruncator).  Also the need of styling for the active state is questionable;
      Chrome has none, and the programmatically activated links have none. */
}


html|a[href]
{
    cursor: url('link_cursor/hyperlink.svg') 13 2 /* HLINK_CURSOR */, pointer; /* [CVU] */
}


read|a       > html|a
{
    animation-duration: /*flashFade*/3s;
    color: inherit; /* Defeat colour as unecessary and distracting */
    outline-offset: 0.5em;
    text-decoration-color: transparent; /* Redundant but for enabling a *transition* effect */
 /* text-decoration-skip: ink; *//* On one hand, this is already the default in Chrome,
      while it is not recognized at all in Firefox (52.6).  ∴ avoid the console warning in Firefox.
      On the other, the latest standard replaces it with a *text-decoration-skip-ink-property* which is
      enabled by default.  https://www.w3.org/TR/css-text-decor/#text-decoration-skip-ink-property */
}


read|a       > html|a:not([read|showsBreadcrumb])
{
    transition-property: text-decoration-color,    z-index;
    transition-duration:                  0.2s,         0s;
    transition-timing-function:       ease-out, step-start;
    transition-delay:                     0.1s,       1.0s; /* Avoid distracting flash on passing */
}


read|a:hover > html|a,
read|a       > html|a[read|showsBreadcrumb]
{
    text-decoration-color: var(--hyperlink-color);
    text-decoration-line: underline; /* [FIB] */
}


read|a       > html|a,
read|a       > html|sup
{
    position: relative; /* Enabling *z-index* change on hover */
    z-index: 0; /* So enabling its *transition*, which the default does not */
}
read|a:hover > html|a,
read|a       > html|a[read|showsBreadcrumb],
read|a:hover > html|sup
{
    z-index: 1; /* Raised clear of the *offWayScreen* */
}


read|a       > html|sup
{
    color: var(--hyperlink-color);
    line-height: 0.5em; /* Preserve line spacing despite an (implicit) *vertical-align* of 'super' */
}


/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon']
{
    --hyperlink-color: hsl( 190/*∼cyan*/, 100%, 60% );
}


html[read|lighting='neon'][read|animatedShow]
read|a       > html|a[read|showsBreadcrumb]
{
    animation-name: flashFade_back_bright; /* As a breadcrumb locator */
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper']
{
    --hyperlink-color: hsl( 240/*blue*/, 100%, 50% );
}


html[read|lighting='paper'][read|animatedShow]
read|a       > html|a[read|showsBreadcrumb]
{
    animation-name: flashFade_back_dark; /* As a breadcrumb locator */
}



/* ---  C o m p o s e r  -------------------------------------------------------------------------------
 */

*[read|isComposer]
{
    border-radius: 0.5em;
    border-width: 0.1em;
           left: -0.1em; /* Despite the border, maintain a precise text margin for appearance sake */
    margin-left:          -2.5em; /* Meet constraints on COMPOSER_L */
    padding: 0.2em 0.2em 0.2em 2.5em; /* TRBL */
    position: relative;
}


*[read|isComposer] [read|isComposer] /* When nested */
{
    margin-right: 0.7em; /* Space between adjacent, vertical border lines to better show the nesting */
}


*[read|isComposer] > eSTag
{
    font-style: italic;
    opacity: 0.6;
    padding-left: 3em; /* ≥ NEST_INDENT, for any inline composition leader that flows to next line */
    text-indent: -3em; /* But not on the first line, rather maintain its alignment */
}


*[read|isComposer] > eSTag > eQName > ePrefix
{
    display: none; /* Assume that it's uninformative */
}


*[read|isComposer] > eSTag > eQName::after
{
    content: ':';
}


/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon'] *[read|isComposer]
{
    border-color: hsla( 0, 0%, 100%, 0.35 );
    border-style: dashed;
    margin-top: 0.2em !important; /* Accomodate the borders */
    margin-bottom: 0.3em !important;
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper'] *[read|isComposer]
{
    border-color: hsla( 0, 0%, 0%, 0.25 );
    border-style: solid none none solid; /* TRBL */
    box-shadow: 0.2em 0.3em 0.5em hsla(0,0%,0%,0.55); /* LR TB blur colour */
    margin-top: 0.3em !important; /* Accomodate the shadows */
    margin-bottom: 0.7em !important;
}



/* ---  D e s c r e e n  -------------------------------------------------------------------------------
 */

@keyframes descreen
{
    from { z-index: 1; } /* Raised clear of the *offWayScreen* */
      to { z-index: 1; } /* Holding it there for the duration */
}



/* ---  F l a s h   f a d e  ---------------------------------------------------------------------------
 */

@keyframes flashFade_back_bright
{
    from { outline: thin dotted var(--hyperlink-color); animation-timing-function: linear }
     33% { outline: thin dotted var(--hyperlink-color); animation-timing-function: ease-out }
      to { outline: thin dotted transparent }
}
@keyframes flashFade_back_dark
{
    from { outline: thin solid var(--hyperlink-color); animation-timing-function: linear }
     33% { outline: thin solid var(--hyperlink-color); animation-timing-function: ease-out }
      to { outline: thin solid transparent }
}


@keyframes flashFade_fore_bright
{                                   /*   white   */
    from { outline: medium solid hsl( 0, 0%, 100% ); animation-timing-function: linear }
     33% { outline: medium solid hsl( 0, 0%, 100% ); animation-timing-function: ease-out }
      to { outline: medium solid transparent }
}
@keyframes flashFade_fore_dark
{                                   /*   black  */
    from { outline: medium solid hsl( 0, 0%,  0% ); animation-timing-function: linear }
     33% { outline: medium solid hsl( 0, 0%,  0% ); animation-timing-function: ease-out }
      to { outline: medium solid transparent }
}



/* ---  S c e n e  -------------------------------------------------------------------------------------
 */

read|scene
{
    display: block;
}


read|scene#data\:\,wayic\.read\.document_scene
{
    --section-margin: 3em;
    margin: var(--section-margin) auto 5em auto; /* TRBL */
    max-width: 50em;
    padding: 0 0.7em 0 3.4rem; /* TRBL, where L = MIN_CLICK_WIDTH_REM + MIN_GAP_REM + ICON_W,
                                        and the *_REM components are defined in readable.js */
}


read|scene#data\:\,wayic\.read\.document_scene html|section,
read|scene#data\:\,wayic\.read\.document_scene > *[read|isWayscript]
{
    margin-top:    var(--section-margin);
    margin-bottom: var(--section-margin);
}



/* ---  S o u r c e   n o d e   ( w a y l i n k )  -----------------------------------------------------
 */

read|forelinker > a
{
    color: inherit; /* Defeat colour as unecessary and distracting */
    text-decoration: none; /* Defeat any browser default (Chrome).  It looks confusing
      in this composite hyperlink.  Moreover the *verticalTruncator* component already suffices
      to indicate the presence of the hyperlink. */
}


read|forelinker > a > preview[class~='singleCharacterContent'] /* [C] */
{
    display: inline-block; /* Enables *min-width* */
    min-width: 2em; /* = VT_PAD_L × 2; enables *text-align* */
    text-align: center; /* Over the left glyph-edge of the *verticalTruncator* */
}


*:not([read|hasPreviewString]):not([read|image='absent']):not([read|hasShortName]) >
read|forelinker > a > br
{
    display: none; /* It happens that no text content precedes the injected *br* element.
      Therefore let it collapse to nothing.  But not when the source node has a short name;
      then the *br* is wanted to position the *verticalTruncator* below the node's start tag. */
}
*:not([read|hasPreviewString]):not([read|image='absent']) >
read|forelinker > a > verticalTruncator
{
    margin-left: -2em; /* = -NEST_INDENT, leaving only the click padding for indentation */
}


read|forelinker > a                       > verticalTruncator
{
    padding-left: 1em; /* Extra click surface + indentation beneath overlying preview text; VT_PAD_L */
    padding-right: 4em; /* Extra click surface */
    position: relative; /* Enabling *z-index* change on hover */
}


read|forelinker > a:hover                 > verticalTruncator,
read|forelinker > a[read|showsBreadcrumb] > verticalTruncator
{
    color: var(--hyperlink-color); /* [FIB] */
    opacity: 1 !important;
    z-index: 1; /* Raised clear of the *offWayScreen* */
}


read|forelinker > a                       > verticalTruncator > span
{
    animation-duration: /*flashFade*/3s;
    outline-offset: 0.3em;
}


/* - - -  target orientation   - - - - -
 */
read|forelinker/*bitform*/ > a:not([href^='#']), /* With a target reference in interdocument form */
read|a       /*hyperform*/ > a:not([href^='#'])[cog|link]
{
    cursor: url('link_cursor/waylink_out.svg') 13 2, pointer;
}


read|forelinker/*bitform*/ > a[href^='#'][read|targetDirection='up'], /* Intradocument, target above */
read|a       /*hyperform*/ > a[href^='#'][read|targetDirection='up'][cog|link]
{
    cursor: url('link_cursor/waylink_in_up.svg') 13 2, pointer;
}
read|forelinker/*bitform*/ > a[href^='#'][read|targetDirection='down'], /* Target below */
read|a       /*hyperform*/ > a[href^='#'][read|targetDirection='down'][cog|link]
{
    cursor: url('link_cursor/waylink_in_down.svg') 13 2, pointer;
}
read|forelinker/*bitform*/ > a[href^='#']:not([read|targetDirection]), /* Target missing */
read|a       /*hyperform*/ > a[href^='#']:not([read|targetDirection])[cog|link]
{
    cursor: url('link_cursor/waylink_in.svg') 13 2, pointer;
}


/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon'] *[read|image]:not(step|*) > eSTag > eQName > eName,
html[read|lighting='neon'] *[read|image] > read|forelinker > a > preview
{
    color: hsl( var(--targetImage-hue), 30%, 50% );
}


html[read|lighting='neon'] *[cog|link$='/#commitment'] > eSTag > eQName > eName
{
    color: hsl(  36/*orange*/, 100%, 50% );
}


html[read|lighting='neon'] *[read|isBroken] > read|forelinker > a > preview
{
    color: hsl( 0/*red*/, 80%, 80% ); /* BRIGHT_BREAK */
}


html[read|lighting='neon']
read|forelinker > a                       > verticalTruncator
{
    opacity: 0.4;
}


html[read|lighting='neon'][read|animatedShow]
read|forelinker > a[read|showsBreadcrumb] > verticalTruncator > span
{
    animation-name: flashFade_back_bright; /* As a breadcrumb locator */
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper'] *[read|image] > eSTag > eQName > eName,
html[read|lighting='paper'] *[read|image] > read|forelinker > a > preview
{
    color: hsl( var(--targetImage-hue), 100%, 30% );
}


html[read|lighting='paper'] *[cog|link$='/#commitment'] > eSTag > eQName > eName
{
    color: hsl(  0/*red*/, 100%, 35% );
}


html[read|lighting='paper'] *[read|isBroken] > read|forelinker > a > preview
{
    color: hsl( 0/*red*/, 100%, 40% ); /* DARK_BREAK */
}


html[read|lighting='paper']
read|forelinker > a                       > verticalTruncator
{
    opacity: 0.2;
}


html[read|lighting='paper'][read|animatedShow]
read|forelinker > a[read|showsBreadcrumb] > verticalTruncator > span
{
    animation-name: flashFade_back_dark; /* As a breadcrumb locator */
}



/* ---  S t a r t   t a g  -----------------------------------------------------------------------------
 */

read|eSTag
{
    display: block;
    margin-left: -2em; /* -NEST_INDENT, undoing it */
}


read|eSTag > eQName
{
    animation-duration: /*descreen*/3s, /*flashFade*/2s;
    outline-offset: 0.2em;
    position: relative; /* Enabling *z-index* for the descreening animation */
}


read|eSTag > eQName[read|isAnonymous] > eName /* Transformed to a mere bullet by readable.jss */
{
    cursor: default; /* Defeat text cursor to avoid flash on passing, which distracts */
}


/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon'][read|animatedShow][read|travel]:not([read|travel^='-']) /* [NBT] */
*:target > read|eSTag > eQName,
html[read|lighting='neon'][read|animatedShow][read|travel]:not([read|travel^='-'])
*[read|isWaylinkTargetable='targeted'] > read|eSTag > eQName /* [TPC] */
{
    animation-name: descreen, flashFade_fore_bright; /* As a travel target locator */
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper'][read|animatedShow][read|travel]:not([read|travel^='-']) /* [NBT] */
*:target > read|eSTag > eQName,
html[read|lighting='paper'][read|animatedShow][read|travel]:not([read|travel^='-'])
*[read|isWaylinkTargetable='targeted'] > read|eSTag > eQName /* [TPC] */
{
    animation-name: descreen, flashFade_fore_dark; /* As a travel target locator */
}



/* ---  S t a r t   t a g  --  i n l i n e d  ----------------------------------------------------------
 *
 * These rules put the start tag in line with the leading flow content if it is short enough to allow
 * the flow content to rise alongside yet maintain its horizontal alignment.
 *
 * The inlining is done by floating the start tag which allows the leading flow content to fall in line.
 * If this method ever proves too difficult to maintain owing to the complications of the float layout,
 * then consider switching to the simpler, more direct method of the defunct composer elements [DCE],
 * namely shipping the leading flow content into the start tag.  A drawback would be the loss
 * of uniform left alignment of the first line of flow content from one waybit to another.
 */

*[read|hasShortName][read|hasLeader]:not([read|image='absent'])[read|isWaybit] > eSTag
{
    float: left; /* Putting the element's start tag in line with its leading text content */
    margin-right: 0.5em;
}


step|*[read|hasShortName][read|hasLeader]:not([read|image='absent']) > read|textAligner
{
    display: block;
}


/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon']
step|*[read|hasShortName][read|hasLeader]:not([read|image='absent']) > read|textAligner
{
    padding-top: 0.30em; /* = NEO_ST_MARG_T + ST_PAD_T */
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper']
step|*[read|hasShortName][read|hasLeader]:not([read|image='absent']) > read|textAligner
{
    padding-top: 0.28em; /* = PAP_ST_MARG_T + ST_PAD_T + ST_BOR */
}



/* ---  S t e p  ---------------------------------------------------------------------------------------
 */

step|* > eSTag > eQName
{
    border-radius: 0.15em / 15%; /* H / V */
    padding: 0.10em   0.20em   0.15em   0.25em; /* TRBL.  TB do not affect layout ∵ eName is inline,  */
}        /* -------- -------- --------    yet they do cause overlapping, ∴ still need ST_PAD constraints
            ST_PAD_T ST_PAD_L ST_PAD_B */

step|* > eSTag > eQName > ePrefix,
step|* > eSTag > eQName:not([read|isAnonymous]) > eName /* Not when isAnonymous ∵ then */
{                                                       /* it is formed as a mere bullet */
    font-weight: bold;
}


step|* > eSTag > eQName > ePrefix[read|isAnonymous],
step|* > eSTag > eQName:not([read|isAnonymous]) > ePrefix
{
    display: none; /* Let the local part stand alone */
}


step|* > eSTag > eQName[read|isAnonymous] > ePrefix:not([read|isAnonymous]) + eName
{
    display: none; /* Let the prefix stand alone */
}


/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon'] step|* > eSTag
{
     margin-top:    0.20em; /* NEO_ST_MARG_T */
    padding-top:    0.10em; /* = ST_PAD_T */
    padding-bottom: 0.15em; /* = ST_PAD_B */
     margin-bottom: 0.20em;
}


html[read|lighting='neon'] step|*             > eSTag > eQName
{
               color: hsl(  0, 0%,   0% );
    background-color: hsla( 0, 0%, 100%, 0.45 );
    margin-left: -0.20em; /* = -ST_PAD_L */
}
html[read|lighting='neon'] step|*[read|image] > eSTag > eQName
{
    background-color: hsla( var(--targetImage-hue), 100%, 60%, 0.45 );;
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper'] step|* > eSTag
{
     margin-top:    0.10em; /* PAP_ST_MARG_T */
    padding-top:    0.18em; /* = ST_PAD_T + ST_BOR */
    padding-bottom: 0.23em; /* = ST_PAD_B + ST_BOR */
     margin-bottom: 0.10em;
}


html[read|lighting='paper'] step|* > eSTag > eQName
{
    /* prominence for the steps, making them stand out at a glance from the other waybits */
    background-color: hsla( 0, 0%, 100%, 0.40 );
        border-color: hsla( 0, 0%,   0%, 0.80 );
        border-style: solid;
        border-width: 0.08em; /* ST_BOR */
    margin-left: -0.28em; /* = -(ST_PAD_L + ST_BOR), to maintain precise text alignment */
}



/* ---  T a r g e t   n o d e   ( w a y l i n k )  -----------------------------------------------------
 */

[read|isWaylinkTargetable] > eSTag
{
    position: relative; /* Establish containing block for absolutely positioned children */
}


[read|isWaylinkTargetable] > eSTag > /*marginalis*/div
{
    position: absolute; top: 0; /* Further placement deferred to readable.js */
    visibility: hidden; /* Avoiding FOUC.  readable.js reverts this after laying out the content.
      But the layout depends on the size of the icon child, therefore do not use display 'none' here. */
}


[read|isWaylinkTargetable] > eSTag > /*marginalis*/div > /*liner*/svg
{
    position: absolute; top: 0; left: 0; /* [HSP] Sizing deferred to readable.js */
}


[read|isWaylinkTargetable] > eSTag > /*marginalis*/div > /*liner*/svg > /*edge mark*/circle
{
    fill: currentColor;
}


[read|isWaylinkTargetable] > eSTag > /*marginalis*/div > /*liner*/svg > /*line*/path
{
    opacity: 0.5;
    stroke: currentColor;
}


[read|isWaylinkTargetable] > eSTag > /*marginalis*/div > icon
{
    position: absolute;
    top: 0; right: 0;
    width: 2.0rem; /* ICON_W.  It determines the visual gap between the left-aligned content
      of the icon and that of the tag name to its right. */
}


[read|isWaybit]
[read|isWaylinkTargetable] > eSTag > /*marginalis*/div > icon /* When it's an underbit */
{
    width: 3.5em; /* Wider to better separate from overbit content */
}


[read|isWaybit] [read|isComposer] >
[read|isWaylinkTargetable] > eSTag > /*marginalis*/div > icon /* When also it's a topmost component */
{
    width: 2.0em; /* ∴ COMPOSER_L ≥ 2.0em; no wider, as there's no direct overbit content */
}


[read|isWaylinkTargetable] > eSTag > /*marginalis*/div > icon::before
{
    content: '\1f78b'; /* Unicode 1f78b (round target) */
}
[read|isWaylinkTargetable][read|isOrphan] > eSTag > /*marginalis*/div > icon::before
{
    content: '│'; /* '│' is Unicode 2502 (box drawings light vertical) */
}


/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon'] [read|isWaylinkTargetable] > eSTag > /*marginalis*/div > /*liner*/svg
{
    opacity: 0.50;
}
html[read|lighting='neon'] [read|isWaylinkTargetable] > eSTag > /*marginalis*/div > icon
{
    opacity: 0.25;
}


html[read|lighting='neon'] [read|isWaylinkTargetable][read|isOrphan] >
eSTag > /*marginalis*/div /*edge mark*/circle
{
    fill:   hsl( 0, 80%, 80% ); /* = BRIGHT_BREAK */
}
html[read|lighting='neon'] [read|isWaylinkTargetable][read|isOrphan] >
eSTag > /*marginalis*/div /*line*/path
{
    stroke: hsl( 0, 80%, 80% );
}
html[read|lighting='neon'] [read|isWaylinkTargetable][read|isOrphan] >
eSTag > /*marginalis*/div > icon
{
    color:  hsl( 0, 80%, 80% );
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper'] [read|isWaylinkTargetable] > eSTag > /*marginalis*/div > /*liner*/svg
{
    opacity: 0.30;
}
html[read|lighting='paper'] [read|isWaylinkTargetable] > eSTag > /*marginalis*/div > icon
{
    opacity: 0.15;
}


html[read|lighting='paper'] [read|isWaylinkTargetable][read|isOrphan] >
eSTag > /*marginalis*/div /*edge mark*/circle
{
    fill:   hsl( 0, 100%, 40% ); /* = DARK_BREAK */
}
html[read|lighting='paper'] [read|isWaylinkTargetable][read|isOrphan] >
eSTag > /*marginalis*/div /*line*/path
{
    stroke: hsl( 0, 100%, 40% );
}
html[read|lighting='paper'] [read|isWaylinkTargetable][read|isOrphan] >
eSTag > /*marginalis*/div > icon
{
    color:  hsl( 0, 100%, 40% );
}



/* ---  T a r g e t   n o d e   ( w a y l i n k )  --  s e l f - h y p e r l i n k i n g  --------------
 */

[read|isWaylinkTargetable] > eSTag > /*marginalis*/div > icon,
[read|isWaylinkTargetable] > eSTag > eQName
{
    cursor: url('link_cursor/hyperlink.svg') 13 2 /* = HLINK_CURSOR */, pointer; /* [CVU]
      Has click function, as per readable.js TargetControl handleClick. */
}


[read|isWaylinkTargetable] > eSTag > eQName
{
    position: relative; /* Enabling *z-index* change on hover */
    transition-property:           z-index;
    transition-duration:                0s;
    transition-timing-function: step-start;
    transition-delay:                 0.6s; /* Avoid distracting flash on passing */
    z-index: 0; /* So enabling its *transition*, which the default does not */
}


[read|isWaylinkTargetable] > eSTag > eQName:hover,
[read|isWaylinkTargetable] > eSTag > eQName[id='wayic.read.TargetControl.iconHover'], /* In lieu of form
                                         "… icon:hover ~ eQName", which cannot work as intended [GSC] */
[read|isWaylinkTargetable] > eSTag:hover > /*marginalis*/div > icon
{
    z-index: 1; /* Raised clear of the *offWayScreen* */
}


[read|isWaylinkTargetable]:target     > eSTag > /*marg.*/div > /*liner*/svg > /*line*/path,
[read|isWaylinkTargetable='targeted'] > eSTag > /*marg.*/div > /*liner*/svg > /*line*/path, /* [TPC] */
[read|isWaylinkTargetable]:target     > eSTag > /*marg.*/div > icon,
[read|isWaylinkTargetable='targeted'] > eSTag > /*marg.*/div > icon /* [TPC] */
{
    opacity: 1 !important;
}


/* - - -  neon   - - - - - - - - - - - -
 */
html[read|lighting='neon'] [read|isWaylinkTargetable] > eSTag:hover > /*marginalis*/div > icon
{
    opacity: 0.7;
}


/* - - -  paper  - - - - - - - - - - - -
 */
html[read|lighting='paper'] [read|isWaylinkTargetable] > eSTag:hover > /*marginalis*/div > icon
{
    opacity: 0.5;
}



/* ---  t e x t - A l i g n e r  -----------------------------------------------------------------------
 */

read|textAligner
{
    display: none;
}



/* ---  W a y b i t  -----------------------------------------------------------------------------------
 */

*[read|isWaybit]
{
    margin-left: 2em; /* NEST_INDENT to effect the nesting of waybit dependents */
    --targetImage-hue: 44/*reddish brown*/;
}



/* ---  W a y b i t  --  n o n - s t e p  --------------------------------------------------------------
 */

*[read|isWaybit]:not(step|*) > eSTag
eQName > ePrefix
{
    display: none; /* Assume that it is uninformative */
}


*[read|isWaybit]:not(step|*) > eSTag
eQName:not([read|isAnonymous]) > eName /* Not when isAnonymous ∵ then it is formed as a mere bullet */
{
    filter: contrast(1.4);
    font-weight: bold;
}



/* ---  W a y s c r i p t  -----------------------------------------------------------------------------
 */

*[read|isWayscript]
{
    clear: left;
    display: block; /* Changing the wayscript *display* property?  sync'd → readable.js layoutBlock. */
    margin-top:    0.1em;
    margin-bottom: 0.1em;
}



/* NOTES
 * -----
 *  [AFA]  Chrome option ‘--allow-file-access-from-files’.
 *         https://peter.sh/experiments/chromium-command-line-switches/#allow-file-access-from-files
 *         https://code.google.com/p/chromium/codesearch#chromium/src/content/public/common/content_switches.cc&q=kAllowFileAccessFromFiles&sq=package:chromium&type=cs
 *
 *         Caveats: https://stackoverflow.com/questions/29371600
 *
 *         Without this option, when such file access is disallowed,
 *         Chrome (59) logs the reason in the console as ‘Cross origin requests are only supported
 *         for protocol schemes: http, data, chrome, chrome-extension, https.’
 *
 *         Discussion of the underlying problem:
 *         https://bugs.chromium.org/p/chromium/issues/detail?id=47416
 *
 *  [C]  · Class selectors.  These fail for NS_READ elements under Chrome (59).  Instead select
 *         the class of NS_READ element using the general attribute selector [class~='CLASS'].
 *
 *  [DCE]  Defunct composer elements.  http://reluk.ca/project/wayic/read/composer/
 *
 *  [CVU]  Cursor variables with URL values.  Unable to use a CSS variable here because Chrome (59)
 *         wrongly resolves the relative URL against the document rather than the style sheet.
 *
 *  [GSC]  General sibling combinator.  Really there is none.  The combinator that CSS misnames a
 *         “general sibling combinator” is really rather particular in its application, in that it
 *         can only combine siblings in document order.  It cannot express a combination like this:
 *
 *           parent > subsequentSibling ~ priorSibling
 *
 *         https://www.w3.org/TR/css3-selectors/#general-sibling-combinators
 *
 *  [HSP]  HTML-embedded styling property.  The SVG standard appears to grant the *svg* element
 *         no such styling property.  Nevertheless the browsers are obeying it,
 *         at least when the *svg* element is embedded in HTML.
 *         https://www.w3.org/TR/SVG11/struct.html#SVGElement
 *         https://www.w3.org/TR/SVG11/styling.html#SVGStylingProperties
 *         http://w3c.github.io/html/semantics-embedded-content.html#svg
 *
 *  [NBT]  Not on back travel, as then user orientation is better served by the breadcrumb alone.
 *         Here the selector [read|travel] combines with :not([read|travel^='-']) to transform
 *         its negative test to a positive one.  This prevents premature firing of the rule
 *         immediately after back travel while the *travel* attribute is yet unset.
 *
 *  [SFL]  Scope of file-scheme limitations.  The scope is unlikely to extend to intercast waylinks.
 *         Regardless of whether the source document is requested from a ‘file’ scheme URL,
 *         still its intercast targets are likely to resolve given that they are served
 *         with a response header of ‘Access-Control-Allow-Origin: *’.
 *         http://reluk.ca/project/wayic/intercast § design constraints § waycast publication
 *
 *  [SPF]  Same-origin policy for file scheme requests.  In Firefox, “a file can read another file only
 *         if the parent directory of the originating file is an ancestor directory of the target file.”
 *         https://developer.mozilla.org/en-US/docs/Same-origin_policy_for_file%3a_URIs
 *
 *  [TPC]  Target pseudo-class failure.  Here adding selector [read|isWaylinkTargetable='targeted']
 *         only because [read|isWaylinkTargetable]:target was seen to fail on Chrome 65.0.
 *         It failed during relatively fast (∼1 s interval) back-and-forth travel.
 *         Otherwise attribute *isWaylinkTargetable* would have only a boolean value [BA in readable.js].
 */


/* Copyright © 2017-2018 Michael Allan and contributors.  Licence MIT. */
